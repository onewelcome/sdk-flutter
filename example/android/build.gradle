buildscript {
    ext.kotlin_version = '1.6.10'
    repositories {
        mavenCentral()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        def (artifactoryUser, artifactoryPassword) = getArtifactoryCredentials()
        if (artifactoryUser?.trim() && artifactoryPassword?.trim()) {
            maven {
                url "https://repo.onegini.com/artifactory/onegini-sdk"
                credentials {
                    username artifactoryUser.trim()
                    password artifactoryPassword.trim()
                }
            }
        } else {
            throw new InvalidUserDataException("You must configure the 'ARTIFACTORY_USER' and 'ARTIFACTORY_PASSWORD' environment variables before you can " +
              "build the project.")
        }
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def getArtifactoryCredentials() {
    // Leave onegini_ property for backwards compatibility
    if (project.hasProperty('onegini_artifactory_user') && project.hasProperty('onegini_artifactory_password')) {
        return [onegini_artifactory_user, onegini_artifactory_password]
    } else if (project.hasProperty('artifactory_user') && project.hasProperty('artifactory_password')) {
        return [artifactory_user, artifactory_password]
    } else if (System.env.ARTIFACTORY_USER && System.env.ARTIFACTORY_PASSWORD) {
        return [System.env.ARTIFACTORY_USER, System.env.ARTIFACTORY_PASSWORD]
    } else {
        def artifactoryFile = file("${project.rootDir}/artifactory.properties")
        if (artifactoryFile.exists()) {
            def props = new Properties()
            artifactoryFile.withInputStream { props.load(it) }
            return [props.getProperty("artifactoryUser"), props.getProperty("artifactoryPassword")]
        }
    }
    return ["", ""]
}
